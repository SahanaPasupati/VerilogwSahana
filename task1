module Verilog1(SW, HEX0, HEX1, HEX2, HEX3);
	input [15:0] SW;
	output [6:0] HEX0;
	output [6:0] HEX1;
	output [6:0] HEX2;
	output [6:0] HEX3;


	assign HEX0[0] = ~((SW[1] & ~SW[3] )  | ( ~SW[3] & ~SW[2] & ~SW[1] & ~SW[0] ) | (~SW[3] & SW[2] & SW[0]) | (~SW[1] & SW[3] & ~SW[2])); 
	assign HEX0[1] = ~((~SW[3] & ~SW[2])  | ( ~SW[1] & ~SW[0])| ( SW[3] & ~SW[2] )| ( SW[1] & SW[0] )); 
	assign HEX0[2] = ~((~SW[3] & ~SW[1] )  | ( ~SW[3] & SW[1] & SW[0] ) | (~SW[3] & SW[2] & SW[1] & ~SW[0]) | (SW[3] & ~SW[1] & ~SW[2])); 
	assign HEX0[3] = ~((~SW[3] & SW[1] & ~SW[2])  | ( ~SW[0] & ~SW[3] & SW[1] ) | (~SW[2] & ~SW[0] & ~SW[1] ) | (~SW[3] & SW[2] & ~SW[1] & SW[0])); 
	assign HEX0[4] = ~((~SW[3] & SW[1] & ~SW[0])  | ( ~SW[2] & ~SW[1] & ~SW[0] )); 
	assign HEX0[5] = ~((~SW[1] & ~SW[0])  | ( ~SW[3] & SW[2] & ~SW[1] & SW[0] ) | (SW[3] & ~SW[2] & ~SW[1] & SW[0] ) | (~SW[3] & SW[2] & SW[1] & ~SW[0])); 
	assign HEX0[6] = ~((~SW[3] & SW[2] & ~SW[1])  | ( SW[3] & ~SW[2] & ~SW[1] )| ( SW[1] & ~SW[3] & ~SW[2] ) | ( SW[1] & ~SW[0] ));	


	assign HEX1[0] = ~((SW[5] & ~SW[7] )  | ( ~SW[7] & ~SW[6] & ~SW[5] & ~SW[4] ) | (~SW[7] & SW[6] & SW[4]) | (~SW[5] & SW[7] & ~SW[6])); 
	assign HEX1[1] = ~((~SW[7] & ~SW[6])  | ( ~SW[5] & ~SW[4])| ( SW[7] & ~SW[6] )| ( SW[5] & SW[4] )); 
	assign HEX1[2] = ~((~SW[7] & ~SW[5] )  | ( ~SW[7] & SW[5] & SW[4] ) | (~SW[7] & SW[6] & SW[5] & ~SW[4]) | (SW[7] & ~SW[5] & ~SW[6])); 
	assign HEX1[3] = ~((~SW[7] & SW[5] & ~SW[6])  | ( ~SW[4] & ~SW[7] & SW[5] ) | (~SW[6] & ~SW[4] & ~SW[5] ) | (~SW[7] & SW[6] & ~SW[5] & SW[4])); 
	assign HEX1[4] = ~((~SW[7] & SW[5] & ~SW[4])  | ( ~SW[6] & ~SW[5] & ~SW[4] )); 
	assign HEX1[5] = ~((~SW[5] & ~SW[4])  | ( ~SW[7] & SW[6] & ~SW[5] & SW[4] ) | (SW[7] & ~SW[6] & ~SW[5] & SW[4] ) | (~SW[7] & SW[6] & SW[5] & ~SW[4])); 
	assign HEX1[6] = ~((~SW[7] & SW[6] & ~SW[5])  | ( SW[7] & ~SW[6] & ~SW[5] )| ( SW[5] & ~SW[7] & ~SW[6] ) | ( SW[5] & ~SW[4] ));
	

	assign HEX2[0] = ~((SW[9] & ~SW[11] )  | ( ~SW[11] & ~SW[10] & ~SW[9] & ~SW[8] ) | (~SW[1] & SW[10] & SW[8]) | (~SW[9] & SW[11] & ~SW[10])); 
	assign HEX2[1] = ~((~SW[11] & ~SW[10])  | ( ~SW[9] & ~SW[8])| ( SW[11] & ~SW[10] )| ( SW[9] & SW[8] )); 
	assign HEX2[2] = ~((~SW[11] & ~SW[9] )  | ( ~SW[11] & SW[9] & SW[8] ) | (~SW[11] & SW[10] & SW[9] & ~SW[8]) | (SW[11] & ~SW[9] & ~SW[10])); 
	assign HEX2[3] = ~((~SW[11] & SW[9] & ~SW[10])  | ( ~SW[8] & ~SW[11] & SW[9] ) | (~SW[10] & ~SW[8] & ~SW[9] ) | (~SW[11] & SW[10] & ~SW[9] & SW[8])); 
	assign HEX2[4] = ~((~SW[11] & SW[9] & ~SW[8])  | ( ~SW[10] & ~SW[9] & ~SW[8] )); 
	assign HEX2[5] = ~((~SW[9] & ~SW[8])  | ( ~SW[11] & SW[10] & ~SW[9] & SW[8] ) | (SW[11] & ~SW[10] & ~SW[9] & SW[8] ) | (~SW[11] & SW[10] & SW[9] & ~SW[8])); 
	assign HEX2[6] = ~((~SW[11] & SW[10] & ~SW[9])  | ( SW[11] & ~SW[10] & ~SW[9] )| ( SW[9] & ~SW[11] & ~SW[10] ) | ( SW[9] & ~SW[8] ));

	assign HEX3[0] = ~((SW[13] & ~SW[15] )  | ( ~SW[15] & ~SW[14] & ~SW[13] & ~SW[12] ) | (~SW[15] & SW[14] & SW[12]) | (~SW[13] & SW[15] & ~SW[14])); 
	assign HEX3[1] = ~((~SW[15] & ~SW[14])  | ( ~SW[13] & ~SW[12])| ( SW[15] & ~SW[14] )| ( SW[13] & SW[12] )); 
	assign HEX3[2] = ~((~SW[15] & ~SW[13] )  | ( ~SW[15] & SW[13] & SW[12] ) | (~SW[15] & SW[14] & SW[13] & ~SW[12]) | (SW[15] & ~SW[13] & ~SW[14])); 
	assign HEX3[3] = ~((~SW[15] & SW[13] & ~SW[14])  | ( ~SW[12] & ~SW[15] & SW[13] ) | (~SW[14] & ~SW[12] & ~SW[13] ) | (~SW[15] & SW[14] & ~SW[13] & SW[12])); 
	assign HEX3[4] = ~((~SW[15] & SW[13] & ~SW[12])  | ( ~SW[14] & ~SW[13] & ~SW[12] )); 
	assign HEX3[5] = ~((~SW[13] & ~SW[12])  | ( ~SW[15] & SW[14] & ~SW[13] & SW[12] ) | (SW[15] & ~SW[14] & ~SW[13] & SW[12] ) | (~SW[15] & SW[14] & SW[13] & ~SW[12])); 
	assign HEX3[6] = ~((~SW[15] & SW[14] & ~SW[13])  | ( SW[15] & ~SW[14] & ~SW[13] )| ( SW[13] & ~SW[15] & ~SW[14] ) | ( SW[13] & ~SW[12] ));
	
	
endmodule

	
	
